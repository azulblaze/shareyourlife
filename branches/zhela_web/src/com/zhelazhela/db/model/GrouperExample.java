package com.zhelazhela.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GrouperExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public GrouperExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected GrouperExample(GrouperExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table grouper
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return this;
        }

        public Criteria andVisibilityIsNull() {
            addCriterion("visibility is null");
            return this;
        }

        public Criteria andVisibilityIsNotNull() {
            addCriterion("visibility is not null");
            return this;
        }

        public Criteria andVisibilityEqualTo(Integer value) {
            addCriterion("visibility =", value, "visibility");
            return this;
        }

        public Criteria andVisibilityNotEqualTo(Integer value) {
            addCriterion("visibility <>", value, "visibility");
            return this;
        }

        public Criteria andVisibilityGreaterThan(Integer value) {
            addCriterion("visibility >", value, "visibility");
            return this;
        }

        public Criteria andVisibilityGreaterThanOrEqualTo(Integer value) {
            addCriterion("visibility >=", value, "visibility");
            return this;
        }

        public Criteria andVisibilityLessThan(Integer value) {
            addCriterion("visibility <", value, "visibility");
            return this;
        }

        public Criteria andVisibilityLessThanOrEqualTo(Integer value) {
            addCriterion("visibility <=", value, "visibility");
            return this;
        }

        public Criteria andVisibilityIn(List<Integer> values) {
            addCriterion("visibility in", values, "visibility");
            return this;
        }

        public Criteria andVisibilityNotIn(List<Integer> values) {
            addCriterion("visibility not in", values, "visibility");
            return this;
        }

        public Criteria andVisibilityBetween(Integer value1, Integer value2) {
            addCriterion("visibility between", value1, value2, "visibility");
            return this;
        }

        public Criteria andVisibilityNotBetween(Integer value1, Integer value2) {
            addCriterion("visibility not between", value1, value2, "visibility");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return this;
        }

        public Criteria andCategoryIsNull() {
            addCriterion("category is null");
            return this;
        }

        public Criteria andCategoryIsNotNull() {
            addCriterion("category is not null");
            return this;
        }

        public Criteria andCategoryEqualTo(String value) {
            addCriterion("category =", value, "category");
            return this;
        }

        public Criteria andCategoryNotEqualTo(String value) {
            addCriterion("category <>", value, "category");
            return this;
        }

        public Criteria andCategoryGreaterThan(String value) {
            addCriterion("category >", value, "category");
            return this;
        }

        public Criteria andCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("category >=", value, "category");
            return this;
        }

        public Criteria andCategoryLessThan(String value) {
            addCriterion("category <", value, "category");
            return this;
        }

        public Criteria andCategoryLessThanOrEqualTo(String value) {
            addCriterion("category <=", value, "category");
            return this;
        }

        public Criteria andCategoryLike(String value) {
            addCriterion("category like", value, "category");
            return this;
        }

        public Criteria andCategoryNotLike(String value) {
            addCriterion("category not like", value, "category");
            return this;
        }

        public Criteria andCategoryIn(List<String> values) {
            addCriterion("category in", values, "category");
            return this;
        }

        public Criteria andCategoryNotIn(List<String> values) {
            addCriterion("category not in", values, "category");
            return this;
        }

        public Criteria andCategoryBetween(String value1, String value2) {
            addCriterion("category between", value1, value2, "category");
            return this;
        }

        public Criteria andCategoryNotBetween(String value1, String value2) {
            addCriterion("category not between", value1, value2, "category");
            return this;
        }

        public Criteria andAvatarIsNull() {
            addCriterion("avatar is null");
            return this;
        }

        public Criteria andAvatarIsNotNull() {
            addCriterion("avatar is not null");
            return this;
        }

        public Criteria andAvatarEqualTo(String value) {
            addCriterion("avatar =", value, "avatar");
            return this;
        }

        public Criteria andAvatarNotEqualTo(String value) {
            addCriterion("avatar <>", value, "avatar");
            return this;
        }

        public Criteria andAvatarGreaterThan(String value) {
            addCriterion("avatar >", value, "avatar");
            return this;
        }

        public Criteria andAvatarGreaterThanOrEqualTo(String value) {
            addCriterion("avatar >=", value, "avatar");
            return this;
        }

        public Criteria andAvatarLessThan(String value) {
            addCriterion("avatar <", value, "avatar");
            return this;
        }

        public Criteria andAvatarLessThanOrEqualTo(String value) {
            addCriterion("avatar <=", value, "avatar");
            return this;
        }

        public Criteria andAvatarLike(String value) {
            addCriterion("avatar like", value, "avatar");
            return this;
        }

        public Criteria andAvatarNotLike(String value) {
            addCriterion("avatar not like", value, "avatar");
            return this;
        }

        public Criteria andAvatarIn(List<String> values) {
            addCriterion("avatar in", values, "avatar");
            return this;
        }

        public Criteria andAvatarNotIn(List<String> values) {
            addCriterion("avatar not in", values, "avatar");
            return this;
        }

        public Criteria andAvatarBetween(String value1, String value2) {
            addCriterion("avatar between", value1, value2, "avatar");
            return this;
        }

        public Criteria andAvatarNotBetween(String value1, String value2) {
            addCriterion("avatar not between", value1, value2, "avatar");
            return this;
        }

        public Criteria andAvatarPicIsNull() {
            addCriterion("avatar_pic is null");
            return this;
        }

        public Criteria andAvatarPicIsNotNull() {
            addCriterion("avatar_pic is not null");
            return this;
        }

        public Criteria andAvatarPicEqualTo(String value) {
            addCriterion("avatar_pic =", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicNotEqualTo(String value) {
            addCriterion("avatar_pic <>", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicGreaterThan(String value) {
            addCriterion("avatar_pic >", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicGreaterThanOrEqualTo(String value) {
            addCriterion("avatar_pic >=", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicLessThan(String value) {
            addCriterion("avatar_pic <", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicLessThanOrEqualTo(String value) {
            addCriterion("avatar_pic <=", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicLike(String value) {
            addCriterion("avatar_pic like", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicNotLike(String value) {
            addCriterion("avatar_pic not like", value, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicIn(List<String> values) {
            addCriterion("avatar_pic in", values, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicNotIn(List<String> values) {
            addCriterion("avatar_pic not in", values, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicBetween(String value1, String value2) {
            addCriterion("avatar_pic between", value1, value2, "avatarPic");
            return this;
        }

        public Criteria andAvatarPicNotBetween(String value1, String value2) {
            addCriterion("avatar_pic not between", value1, value2, "avatarPic");
            return this;
        }

        public Criteria andMaxUserIsNull() {
            addCriterion("max_user is null");
            return this;
        }

        public Criteria andMaxUserIsNotNull() {
            addCriterion("max_user is not null");
            return this;
        }

        public Criteria andMaxUserEqualTo(Integer value) {
            addCriterion("max_user =", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserNotEqualTo(Integer value) {
            addCriterion("max_user <>", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserGreaterThan(Integer value) {
            addCriterion("max_user >", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_user >=", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserLessThan(Integer value) {
            addCriterion("max_user <", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserLessThanOrEqualTo(Integer value) {
            addCriterion("max_user <=", value, "maxUser");
            return this;
        }

        public Criteria andMaxUserIn(List<Integer> values) {
            addCriterion("max_user in", values, "maxUser");
            return this;
        }

        public Criteria andMaxUserNotIn(List<Integer> values) {
            addCriterion("max_user not in", values, "maxUser");
            return this;
        }

        public Criteria andMaxUserBetween(Integer value1, Integer value2) {
            addCriterion("max_user between", value1, value2, "maxUser");
            return this;
        }

        public Criteria andMaxUserNotBetween(Integer value1, Integer value2) {
            addCriterion("max_user not between", value1, value2, "maxUser");
            return this;
        }

        public Criteria andCurrUserIsNull() {
            addCriterion("curr_user is null");
            return this;
        }

        public Criteria andCurrUserIsNotNull() {
            addCriterion("curr_user is not null");
            return this;
        }

        public Criteria andCurrUserEqualTo(Integer value) {
            addCriterion("curr_user =", value, "currUser");
            return this;
        }

        public Criteria andCurrUserNotEqualTo(Integer value) {
            addCriterion("curr_user <>", value, "currUser");
            return this;
        }

        public Criteria andCurrUserGreaterThan(Integer value) {
            addCriterion("curr_user >", value, "currUser");
            return this;
        }

        public Criteria andCurrUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("curr_user >=", value, "currUser");
            return this;
        }

        public Criteria andCurrUserLessThan(Integer value) {
            addCriterion("curr_user <", value, "currUser");
            return this;
        }

        public Criteria andCurrUserLessThanOrEqualTo(Integer value) {
            addCriterion("curr_user <=", value, "currUser");
            return this;
        }

        public Criteria andCurrUserIn(List<Integer> values) {
            addCriterion("curr_user in", values, "currUser");
            return this;
        }

        public Criteria andCurrUserNotIn(List<Integer> values) {
            addCriterion("curr_user not in", values, "currUser");
            return this;
        }

        public Criteria andCurrUserBetween(Integer value1, Integer value2) {
            addCriterion("curr_user between", value1, value2, "currUser");
            return this;
        }

        public Criteria andCurrUserNotBetween(Integer value1, Integer value2) {
            addCriterion("curr_user not between", value1, value2, "currUser");
            return this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return this;
        }
    }
}