package com.zhelazhela.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GoodsSellAddrExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public GoodsSellAddrExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected GoodsSellAddrExample(GoodsSellAddrExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table goods_sell_addr
     *
     * @ibatorgenerated Fri Feb 12 23:38:37 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andGoodsPriceIdIsNull() {
            addCriterion("goods_price_id is null");
            return this;
        }

        public Criteria andGoodsPriceIdIsNotNull() {
            addCriterion("goods_price_id is not null");
            return this;
        }

        public Criteria andGoodsPriceIdEqualTo(Long value) {
            addCriterion("goods_price_id =", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdNotEqualTo(Long value) {
            addCriterion("goods_price_id <>", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdGreaterThan(Long value) {
            addCriterion("goods_price_id >", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdGreaterThanOrEqualTo(Long value) {
            addCriterion("goods_price_id >=", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdLessThan(Long value) {
            addCriterion("goods_price_id <", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdLessThanOrEqualTo(Long value) {
            addCriterion("goods_price_id <=", value, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdIn(List<Long> values) {
            addCriterion("goods_price_id in", values, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdNotIn(List<Long> values) {
            addCriterion("goods_price_id not in", values, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdBetween(Long value1, Long value2) {
            addCriterion("goods_price_id between", value1, value2, "goodsPriceId");
            return this;
        }

        public Criteria andGoodsPriceIdNotBetween(Long value1, Long value2) {
            addCriterion("goods_price_id not between", value1, value2, "goodsPriceId");
            return this;
        }

        public Criteria andAddrTypeIsNull() {
            addCriterion("addr_type is null");
            return this;
        }

        public Criteria andAddrTypeIsNotNull() {
            addCriterion("addr_type is not null");
            return this;
        }

        public Criteria andAddrTypeEqualTo(Integer value) {
            addCriterion("addr_type =", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeNotEqualTo(Integer value) {
            addCriterion("addr_type <>", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeGreaterThan(Integer value) {
            addCriterion("addr_type >", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("addr_type >=", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeLessThan(Integer value) {
            addCriterion("addr_type <", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeLessThanOrEqualTo(Integer value) {
            addCriterion("addr_type <=", value, "addrType");
            return this;
        }

        public Criteria andAddrTypeIn(List<Integer> values) {
            addCriterion("addr_type in", values, "addrType");
            return this;
        }

        public Criteria andAddrTypeNotIn(List<Integer> values) {
            addCriterion("addr_type not in", values, "addrType");
            return this;
        }

        public Criteria andAddrTypeBetween(Integer value1, Integer value2) {
            addCriterion("addr_type between", value1, value2, "addrType");
            return this;
        }

        public Criteria andAddrTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("addr_type not between", value1, value2, "addrType");
            return this;
        }

        public Criteria andBuyLinkIsNull() {
            addCriterion("buy_link is null");
            return this;
        }

        public Criteria andBuyLinkIsNotNull() {
            addCriterion("buy_link is not null");
            return this;
        }

        public Criteria andBuyLinkEqualTo(String value) {
            addCriterion("buy_link =", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkNotEqualTo(String value) {
            addCriterion("buy_link <>", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkGreaterThan(String value) {
            addCriterion("buy_link >", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkGreaterThanOrEqualTo(String value) {
            addCriterion("buy_link >=", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkLessThan(String value) {
            addCriterion("buy_link <", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkLessThanOrEqualTo(String value) {
            addCriterion("buy_link <=", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkLike(String value) {
            addCriterion("buy_link like", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkNotLike(String value) {
            addCriterion("buy_link not like", value, "buyLink");
            return this;
        }

        public Criteria andBuyLinkIn(List<String> values) {
            addCriterion("buy_link in", values, "buyLink");
            return this;
        }

        public Criteria andBuyLinkNotIn(List<String> values) {
            addCriterion("buy_link not in", values, "buyLink");
            return this;
        }

        public Criteria andBuyLinkBetween(String value1, String value2) {
            addCriterion("buy_link between", value1, value2, "buyLink");
            return this;
        }

        public Criteria andBuyLinkNotBetween(String value1, String value2) {
            addCriterion("buy_link not between", value1, value2, "buyLink");
            return this;
        }

        public Criteria andBuyCountryIsNull() {
            addCriterion("buy_country is null");
            return this;
        }

        public Criteria andBuyCountryIsNotNull() {
            addCriterion("buy_country is not null");
            return this;
        }

        public Criteria andBuyCountryEqualTo(String value) {
            addCriterion("buy_country =", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryNotEqualTo(String value) {
            addCriterion("buy_country <>", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryGreaterThan(String value) {
            addCriterion("buy_country >", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryGreaterThanOrEqualTo(String value) {
            addCriterion("buy_country >=", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryLessThan(String value) {
            addCriterion("buy_country <", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryLessThanOrEqualTo(String value) {
            addCriterion("buy_country <=", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryLike(String value) {
            addCriterion("buy_country like", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryNotLike(String value) {
            addCriterion("buy_country not like", value, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryIn(List<String> values) {
            addCriterion("buy_country in", values, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryNotIn(List<String> values) {
            addCriterion("buy_country not in", values, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryBetween(String value1, String value2) {
            addCriterion("buy_country between", value1, value2, "buyCountry");
            return this;
        }

        public Criteria andBuyCountryNotBetween(String value1, String value2) {
            addCriterion("buy_country not between", value1, value2, "buyCountry");
            return this;
        }

        public Criteria andBuyStateProvinceIsNull() {
            addCriterion("buy_state_province is null");
            return this;
        }

        public Criteria andBuyStateProvinceIsNotNull() {
            addCriterion("buy_state_province is not null");
            return this;
        }

        public Criteria andBuyStateProvinceEqualTo(String value) {
            addCriterion("buy_state_province =", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceNotEqualTo(String value) {
            addCriterion("buy_state_province <>", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceGreaterThan(String value) {
            addCriterion("buy_state_province >", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceGreaterThanOrEqualTo(String value) {
            addCriterion("buy_state_province >=", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceLessThan(String value) {
            addCriterion("buy_state_province <", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceLessThanOrEqualTo(String value) {
            addCriterion("buy_state_province <=", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceLike(String value) {
            addCriterion("buy_state_province like", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceNotLike(String value) {
            addCriterion("buy_state_province not like", value, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceIn(List<String> values) {
            addCriterion("buy_state_province in", values, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceNotIn(List<String> values) {
            addCriterion("buy_state_province not in", values, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceBetween(String value1, String value2) {
            addCriterion("buy_state_province between", value1, value2, "buyStateProvince");
            return this;
        }

        public Criteria andBuyStateProvinceNotBetween(String value1, String value2) {
            addCriterion("buy_state_province not between", value1, value2, "buyStateProvince");
            return this;
        }

        public Criteria andBuyCityIsNull() {
            addCriterion("buy_city is null");
            return this;
        }

        public Criteria andBuyCityIsNotNull() {
            addCriterion("buy_city is not null");
            return this;
        }

        public Criteria andBuyCityEqualTo(String value) {
            addCriterion("buy_city =", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityNotEqualTo(String value) {
            addCriterion("buy_city <>", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityGreaterThan(String value) {
            addCriterion("buy_city >", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityGreaterThanOrEqualTo(String value) {
            addCriterion("buy_city >=", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityLessThan(String value) {
            addCriterion("buy_city <", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityLessThanOrEqualTo(String value) {
            addCriterion("buy_city <=", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityLike(String value) {
            addCriterion("buy_city like", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityNotLike(String value) {
            addCriterion("buy_city not like", value, "buyCity");
            return this;
        }

        public Criteria andBuyCityIn(List<String> values) {
            addCriterion("buy_city in", values, "buyCity");
            return this;
        }

        public Criteria andBuyCityNotIn(List<String> values) {
            addCriterion("buy_city not in", values, "buyCity");
            return this;
        }

        public Criteria andBuyCityBetween(String value1, String value2) {
            addCriterion("buy_city between", value1, value2, "buyCity");
            return this;
        }

        public Criteria andBuyCityNotBetween(String value1, String value2) {
            addCriterion("buy_city not between", value1, value2, "buyCity");
            return this;
        }

        public Criteria andButyAddrIsNull() {
            addCriterion("buty_addr is null");
            return this;
        }

        public Criteria andButyAddrIsNotNull() {
            addCriterion("buty_addr is not null");
            return this;
        }

        public Criteria andButyAddrEqualTo(String value) {
            addCriterion("buty_addr =", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrNotEqualTo(String value) {
            addCriterion("buty_addr <>", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrGreaterThan(String value) {
            addCriterion("buty_addr >", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrGreaterThanOrEqualTo(String value) {
            addCriterion("buty_addr >=", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrLessThan(String value) {
            addCriterion("buty_addr <", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrLessThanOrEqualTo(String value) {
            addCriterion("buty_addr <=", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrLike(String value) {
            addCriterion("buty_addr like", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrNotLike(String value) {
            addCriterion("buty_addr not like", value, "butyAddr");
            return this;
        }

        public Criteria andButyAddrIn(List<String> values) {
            addCriterion("buty_addr in", values, "butyAddr");
            return this;
        }

        public Criteria andButyAddrNotIn(List<String> values) {
            addCriterion("buty_addr not in", values, "butyAddr");
            return this;
        }

        public Criteria andButyAddrBetween(String value1, String value2) {
            addCriterion("buty_addr between", value1, value2, "butyAddr");
            return this;
        }

        public Criteria andButyAddrNotBetween(String value1, String value2) {
            addCriterion("buty_addr not between", value1, value2, "butyAddr");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andLongitudeIsNull() {
            addCriterion("longitude is null");
            return this;
        }

        public Criteria andLongitudeIsNotNull() {
            addCriterion("longitude is not null");
            return this;
        }

        public Criteria andLongitudeEqualTo(Float value) {
            addCriterion("longitude =", value, "longitude");
            return this;
        }

        public Criteria andLongitudeNotEqualTo(Float value) {
            addCriterion("longitude <>", value, "longitude");
            return this;
        }

        public Criteria andLongitudeGreaterThan(Float value) {
            addCriterion("longitude >", value, "longitude");
            return this;
        }

        public Criteria andLongitudeGreaterThanOrEqualTo(Float value) {
            addCriterion("longitude >=", value, "longitude");
            return this;
        }

        public Criteria andLongitudeLessThan(Float value) {
            addCriterion("longitude <", value, "longitude");
            return this;
        }

        public Criteria andLongitudeLessThanOrEqualTo(Float value) {
            addCriterion("longitude <=", value, "longitude");
            return this;
        }

        public Criteria andLongitudeIn(List<Float> values) {
            addCriterion("longitude in", values, "longitude");
            return this;
        }

        public Criteria andLongitudeNotIn(List<Float> values) {
            addCriterion("longitude not in", values, "longitude");
            return this;
        }

        public Criteria andLongitudeBetween(Float value1, Float value2) {
            addCriterion("longitude between", value1, value2, "longitude");
            return this;
        }

        public Criteria andLongitudeNotBetween(Float value1, Float value2) {
            addCriterion("longitude not between", value1, value2, "longitude");
            return this;
        }

        public Criteria andLatitudeIsNull() {
            addCriterion("latitude is null");
            return this;
        }

        public Criteria andLatitudeIsNotNull() {
            addCriterion("latitude is not null");
            return this;
        }

        public Criteria andLatitudeEqualTo(Float value) {
            addCriterion("latitude =", value, "latitude");
            return this;
        }

        public Criteria andLatitudeNotEqualTo(Float value) {
            addCriterion("latitude <>", value, "latitude");
            return this;
        }

        public Criteria andLatitudeGreaterThan(Float value) {
            addCriterion("latitude >", value, "latitude");
            return this;
        }

        public Criteria andLatitudeGreaterThanOrEqualTo(Float value) {
            addCriterion("latitude >=", value, "latitude");
            return this;
        }

        public Criteria andLatitudeLessThan(Float value) {
            addCriterion("latitude <", value, "latitude");
            return this;
        }

        public Criteria andLatitudeLessThanOrEqualTo(Float value) {
            addCriterion("latitude <=", value, "latitude");
            return this;
        }

        public Criteria andLatitudeIn(List<Float> values) {
            addCriterion("latitude in", values, "latitude");
            return this;
        }

        public Criteria andLatitudeNotIn(List<Float> values) {
            addCriterion("latitude not in", values, "latitude");
            return this;
        }

        public Criteria andLatitudeBetween(Float value1, Float value2) {
            addCriterion("latitude between", value1, value2, "latitude");
            return this;
        }

        public Criteria andLatitudeNotBetween(Float value1, Float value2) {
            addCriterion("latitude not between", value1, value2, "latitude");
            return this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return this;
        }
    }
}