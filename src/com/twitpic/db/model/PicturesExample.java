package com.twitpic.db.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PicturesExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public PicturesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected PicturesExample(PicturesExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andMinIsNull() {
            addCriterion("min is null");
            return this;
        }

        public Criteria andMinIsNotNull() {
            addCriterion("min is not null");
            return this;
        }

        public Criteria andMinEqualTo(String value) {
            addCriterion("min =", value, "min");
            return this;
        }

        public Criteria andMinNotEqualTo(String value) {
            addCriterion("min <>", value, "min");
            return this;
        }

        public Criteria andMinGreaterThan(String value) {
            addCriterion("min >", value, "min");
            return this;
        }

        public Criteria andMinGreaterThanOrEqualTo(String value) {
            addCriterion("min >=", value, "min");
            return this;
        }

        public Criteria andMinLessThan(String value) {
            addCriterion("min <", value, "min");
            return this;
        }

        public Criteria andMinLessThanOrEqualTo(String value) {
            addCriterion("min <=", value, "min");
            return this;
        }

        public Criteria andMinLike(String value) {
            addCriterion("min like", value, "min");
            return this;
        }

        public Criteria andMinNotLike(String value) {
            addCriterion("min not like", value, "min");
            return this;
        }

        public Criteria andMinIn(List<String> values) {
            addCriterion("min in", values, "min");
            return this;
        }

        public Criteria andMinNotIn(List<String> values) {
            addCriterion("min not in", values, "min");
            return this;
        }

        public Criteria andMinBetween(String value1, String value2) {
            addCriterion("min between", value1, value2, "min");
            return this;
        }

        public Criteria andMinNotBetween(String value1, String value2) {
            addCriterion("min not between", value1, value2, "min");
            return this;
        }

        public Criteria andThumbIsNull() {
            addCriterion("thumb is null");
            return this;
        }

        public Criteria andThumbIsNotNull() {
            addCriterion("thumb is not null");
            return this;
        }

        public Criteria andThumbEqualTo(String value) {
            addCriterion("thumb =", value, "thumb");
            return this;
        }

        public Criteria andThumbNotEqualTo(String value) {
            addCriterion("thumb <>", value, "thumb");
            return this;
        }

        public Criteria andThumbGreaterThan(String value) {
            addCriterion("thumb >", value, "thumb");
            return this;
        }

        public Criteria andThumbGreaterThanOrEqualTo(String value) {
            addCriterion("thumb >=", value, "thumb");
            return this;
        }

        public Criteria andThumbLessThan(String value) {
            addCriterion("thumb <", value, "thumb");
            return this;
        }

        public Criteria andThumbLessThanOrEqualTo(String value) {
            addCriterion("thumb <=", value, "thumb");
            return this;
        }

        public Criteria andThumbLike(String value) {
            addCriterion("thumb like", value, "thumb");
            return this;
        }

        public Criteria andThumbNotLike(String value) {
            addCriterion("thumb not like", value, "thumb");
            return this;
        }

        public Criteria andThumbIn(List<String> values) {
            addCriterion("thumb in", values, "thumb");
            return this;
        }

        public Criteria andThumbNotIn(List<String> values) {
            addCriterion("thumb not in", values, "thumb");
            return this;
        }

        public Criteria andThumbBetween(String value1, String value2) {
            addCriterion("thumb between", value1, value2, "thumb");
            return this;
        }

        public Criteria andThumbNotBetween(String value1, String value2) {
            addCriterion("thumb not between", value1, value2, "thumb");
            return this;
        }

        public Criteria andLargeIsNull() {
            addCriterion("large is null");
            return this;
        }

        public Criteria andLargeIsNotNull() {
            addCriterion("large is not null");
            return this;
        }

        public Criteria andLargeEqualTo(String value) {
            addCriterion("large =", value, "large");
            return this;
        }

        public Criteria andLargeNotEqualTo(String value) {
            addCriterion("large <>", value, "large");
            return this;
        }

        public Criteria andLargeGreaterThan(String value) {
            addCriterion("large >", value, "large");
            return this;
        }

        public Criteria andLargeGreaterThanOrEqualTo(String value) {
            addCriterion("large >=", value, "large");
            return this;
        }

        public Criteria andLargeLessThan(String value) {
            addCriterion("large <", value, "large");
            return this;
        }

        public Criteria andLargeLessThanOrEqualTo(String value) {
            addCriterion("large <=", value, "large");
            return this;
        }

        public Criteria andLargeLike(String value) {
            addCriterion("large like", value, "large");
            return this;
        }

        public Criteria andLargeNotLike(String value) {
            addCriterion("large not like", value, "large");
            return this;
        }

        public Criteria andLargeIn(List<String> values) {
            addCriterion("large in", values, "large");
            return this;
        }

        public Criteria andLargeNotIn(List<String> values) {
            addCriterion("large not in", values, "large");
            return this;
        }

        public Criteria andLargeBetween(String value1, String value2) {
            addCriterion("large between", value1, value2, "large");
            return this;
        }

        public Criteria andLargeNotBetween(String value1, String value2) {
            addCriterion("large not between", value1, value2, "large");
            return this;
        }

        public Criteria andFullIsNull() {
            addCriterion("full is null");
            return this;
        }

        public Criteria andFullIsNotNull() {
            addCriterion("full is not null");
            return this;
        }

        public Criteria andFullEqualTo(String value) {
            addCriterion("full =", value, "full");
            return this;
        }

        public Criteria andFullNotEqualTo(String value) {
            addCriterion("full <>", value, "full");
            return this;
        }

        public Criteria andFullGreaterThan(String value) {
            addCriterion("full >", value, "full");
            return this;
        }

        public Criteria andFullGreaterThanOrEqualTo(String value) {
            addCriterion("full >=", value, "full");
            return this;
        }

        public Criteria andFullLessThan(String value) {
            addCriterion("full <", value, "full");
            return this;
        }

        public Criteria andFullLessThanOrEqualTo(String value) {
            addCriterion("full <=", value, "full");
            return this;
        }

        public Criteria andFullLike(String value) {
            addCriterion("full like", value, "full");
            return this;
        }

        public Criteria andFullNotLike(String value) {
            addCriterion("full not like", value, "full");
            return this;
        }

        public Criteria andFullIn(List<String> values) {
            addCriterion("full in", values, "full");
            return this;
        }

        public Criteria andFullNotIn(List<String> values) {
            addCriterion("full not in", values, "full");
            return this;
        }

        public Criteria andFullBetween(String value1, String value2) {
            addCriterion("full between", value1, value2, "full");
            return this;
        }

        public Criteria andFullNotBetween(String value1, String value2) {
            addCriterion("full not between", value1, value2, "full");
            return this;
        }
    }
}