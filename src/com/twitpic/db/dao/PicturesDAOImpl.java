package com.twitpic.db.dao;

import com.twitpic.db.model.Pictures;
import com.twitpic.db.model.PicturesExample;
import com.twitpic.domain.PictureInfo;

import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class PicturesDAOImpl extends SqlMapClientDaoSupport implements PicturesDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public PicturesDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void insert(Pictures record) {
        getSqlMapClientTemplate().insert("pictures.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int updateByPrimaryKey(Pictures record) {
        int rows = getSqlMapClientTemplate().update("pictures.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int updateByPrimaryKeySelective(Pictures record) {
        int rows = getSqlMapClientTemplate().update("pictures.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    @SuppressWarnings("unchecked")
    public List<Pictures> selectByExample(PicturesExample example) {
        List<Pictures> list = (List<Pictures>) getSqlMapClientTemplate().queryForList("pictures.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public Pictures selectByPrimaryKey(Long id) {
        Pictures key = new Pictures();
        key.setId(id);
        Pictures record = (Pictures) getSqlMapClientTemplate().queryForObject("pictures.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int deleteByExample(PicturesExample example) {
        int rows = getSqlMapClientTemplate().delete("pictures.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int deleteByPrimaryKey(Long id) {
        Pictures key = new Pictures();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("pictures.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int countByExample(PicturesExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("pictures.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int updateByExampleSelective(Pictures record, PicturesExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pictures.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public int updateByExample(Pictures record, PicturesExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pictures.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table pictures
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    private static class UpdateByExampleParms extends PicturesExample {
        private Object record;

        public UpdateByExampleParms(Object record, PicturesExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@SuppressWarnings("unchecked")
	@Override
	public List<PictureInfo> findPicturesInfo(int id, String account, Integer status) {
		java.util.Map parameters = new java.util.HashMap();
		parameters.put(id, id);
		parameters.put("upload_account", account);
		parameters.put("status", status);
		List<PictureInfo> list = (List<PictureInfo>) getSqlMapClientTemplate().queryForList("pictures.pictures_infomation", parameters);
        return list;
	}

	@Override
	public Long insert_return_id(Pictures record) {
		return (Long)getSqlMapClientTemplate().insert("pictures.insert_return_id", record);
	}
}