package com.zhela.cloudblog.model.ourservice;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.zhela.cloudblog.model.DefaultExample;

public class ServiceBindExample extends DefaultExample{
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public ServiceBindExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    protected ServiceBindExample(ServiceBindExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table service_bind
     *
     * @ibatorgenerated Mon Nov 29 14:02:02 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return this;
        }

        public Criteria andAccountIsNull() {
            addCriterion("account is null");
            return this;
        }

        public Criteria andAccountIsNotNull() {
            addCriterion("account is not null");
            return this;
        }

        public Criteria andAccountEqualTo(String value) {
            addCriterion("account =", value, "account");
            return this;
        }

        public Criteria andAccountNotEqualTo(String value) {
            addCriterion("account <>", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThan(String value) {
            addCriterion("account >", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThanOrEqualTo(String value) {
            addCriterion("account >=", value, "account");
            return this;
        }

        public Criteria andAccountLessThan(String value) {
            addCriterion("account <", value, "account");
            return this;
        }

        public Criteria andAccountLessThanOrEqualTo(String value) {
            addCriterion("account <=", value, "account");
            return this;
        }

        public Criteria andAccountLike(String value) {
            addCriterion("account like", value, "account");
            return this;
        }

        public Criteria andAccountNotLike(String value) {
            addCriterion("account not like", value, "account");
            return this;
        }

        public Criteria andAccountIn(List<String> values) {
            addCriterion("account in", values, "account");
            return this;
        }

        public Criteria andAccountNotIn(List<String> values) {
            addCriterion("account not in", values, "account");
            return this;
        }

        public Criteria andAccountBetween(String value1, String value2) {
            addCriterion("account between", value1, value2, "account");
            return this;
        }

        public Criteria andAccountNotBetween(String value1, String value2) {
            addCriterion("account not between", value1, value2, "account");
            return this;
        }

        public Criteria andOurServiceIdIsNull() {
            addCriterion("our_service_id is null");
            return this;
        }

        public Criteria andOurServiceIdIsNotNull() {
            addCriterion("our_service_id is not null");
            return this;
        }

        public Criteria andOurServiceIdEqualTo(Integer value) {
            addCriterion("our_service_id =", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdNotEqualTo(Integer value) {
            addCriterion("our_service_id <>", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdGreaterThan(Integer value) {
            addCriterion("our_service_id >", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("our_service_id >=", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdLessThan(Integer value) {
            addCriterion("our_service_id <", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdLessThanOrEqualTo(Integer value) {
            addCriterion("our_service_id <=", value, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdIn(List<Integer> values) {
            addCriterion("our_service_id in", values, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdNotIn(List<Integer> values) {
            addCriterion("our_service_id not in", values, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdBetween(Integer value1, Integer value2) {
            addCriterion("our_service_id between", value1, value2, "ourServiceId");
            return this;
        }

        public Criteria andOurServiceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("our_service_id not between", value1, value2, "ourServiceId");
            return this;
        }

        public Criteria andParmsIsNull() {
            addCriterion("parms is null");
            return this;
        }

        public Criteria andParmsIsNotNull() {
            addCriterion("parms is not null");
            return this;
        }

        public Criteria andParmsEqualTo(String value) {
            addCriterion("parms =", value, "parms");
            return this;
        }

        public Criteria andParmsNotEqualTo(String value) {
            addCriterion("parms <>", value, "parms");
            return this;
        }

        public Criteria andParmsGreaterThan(String value) {
            addCriterion("parms >", value, "parms");
            return this;
        }

        public Criteria andParmsGreaterThanOrEqualTo(String value) {
            addCriterion("parms >=", value, "parms");
            return this;
        }

        public Criteria andParmsLessThan(String value) {
            addCriterion("parms <", value, "parms");
            return this;
        }

        public Criteria andParmsLessThanOrEqualTo(String value) {
            addCriterion("parms <=", value, "parms");
            return this;
        }

        public Criteria andParmsLike(String value) {
            addCriterion("parms like", value, "parms");
            return this;
        }

        public Criteria andParmsNotLike(String value) {
            addCriterion("parms not like", value, "parms");
            return this;
        }

        public Criteria andParmsIn(List<String> values) {
            addCriterion("parms in", values, "parms");
            return this;
        }

        public Criteria andParmsNotIn(List<String> values) {
            addCriterion("parms not in", values, "parms");
            return this;
        }

        public Criteria andParmsBetween(String value1, String value2) {
            addCriterion("parms between", value1, value2, "parms");
            return this;
        }

        public Criteria andParmsNotBetween(String value1, String value2) {
            addCriterion("parms not between", value1, value2, "parms");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }
    }
}