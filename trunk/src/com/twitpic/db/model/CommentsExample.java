package com.twitpic.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CommentsExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public CommentsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	protected CommentsExample(CommentsExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table comments
	 * @abatorgenerated  Wed Aug 05 16:18:34 CST 2009
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andIdPicturesIsNull() {
			addCriterion("id_pictures is null");
			return this;
		}

		public Criteria andIdPicturesIsNotNull() {
			addCriterion("id_pictures is not null");
			return this;
		}

		public Criteria andIdPicturesEqualTo(Long value) {
			addCriterion("id_pictures =", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesNotEqualTo(Long value) {
			addCriterion("id_pictures <>", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesGreaterThan(Long value) {
			addCriterion("id_pictures >", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesGreaterThanOrEqualTo(Long value) {
			addCriterion("id_pictures >=", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesLessThan(Long value) {
			addCriterion("id_pictures <", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesLessThanOrEqualTo(Long value) {
			addCriterion("id_pictures <=", value, "idPictures");
			return this;
		}

		public Criteria andIdPicturesIn(List<Long> values) {
			addCriterion("id_pictures in", values, "idPictures");
			return this;
		}

		public Criteria andIdPicturesNotIn(List<Long> values) {
			addCriterion("id_pictures not in", values, "idPictures");
			return this;
		}

		public Criteria andIdPicturesBetween(Long value1, Long value2) {
			addCriterion("id_pictures between", value1, value2, "idPictures");
			return this;
		}

		public Criteria andIdPicturesNotBetween(Long value1, Long value2) {
			addCriterion("id_pictures not between", value1, value2,
					"idPictures");
			return this;
		}

		public Criteria andAccountIsNull() {
			addCriterion("account is null");
			return this;
		}

		public Criteria andAccountIsNotNull() {
			addCriterion("account is not null");
			return this;
		}

		public Criteria andAccountEqualTo(String value) {
			addCriterion("account =", value, "account");
			return this;
		}

		public Criteria andAccountNotEqualTo(String value) {
			addCriterion("account <>", value, "account");
			return this;
		}

		public Criteria andAccountGreaterThan(String value) {
			addCriterion("account >", value, "account");
			return this;
		}

		public Criteria andAccountGreaterThanOrEqualTo(String value) {
			addCriterion("account >=", value, "account");
			return this;
		}

		public Criteria andAccountLessThan(String value) {
			addCriterion("account <", value, "account");
			return this;
		}

		public Criteria andAccountLessThanOrEqualTo(String value) {
			addCriterion("account <=", value, "account");
			return this;
		}

		public Criteria andAccountLike(String value) {
			addCriterion("account like", value, "account");
			return this;
		}

		public Criteria andAccountNotLike(String value) {
			addCriterion("account not like", value, "account");
			return this;
		}

		public Criteria andAccountIn(List<String> values) {
			addCriterion("account in", values, "account");
			return this;
		}

		public Criteria andAccountNotIn(List<String> values) {
			addCriterion("account not in", values, "account");
			return this;
		}

		public Criteria andAccountBetween(String value1, String value2) {
			addCriterion("account between", value1, value2, "account");
			return this;
		}

		public Criteria andAccountNotBetween(String value1, String value2) {
			addCriterion("account not between", value1, value2, "account");
			return this;
		}

		public Criteria andCommentTimeIsNull() {
			addCriterion("comment_time is null");
			return this;
		}

		public Criteria andCommentTimeIsNotNull() {
			addCriterion("comment_time is not null");
			return this;
		}

		public Criteria andCommentTimeEqualTo(Date value) {
			addCriterion("comment_time =", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeNotEqualTo(Date value) {
			addCriterion("comment_time <>", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeGreaterThan(Date value) {
			addCriterion("comment_time >", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("comment_time >=", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeLessThan(Date value) {
			addCriterion("comment_time <", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeLessThanOrEqualTo(Date value) {
			addCriterion("comment_time <=", value, "commentTime");
			return this;
		}

		public Criteria andCommentTimeIn(List<Date> values) {
			addCriterion("comment_time in", values, "commentTime");
			return this;
		}

		public Criteria andCommentTimeNotIn(List<Date> values) {
			addCriterion("comment_time not in", values, "commentTime");
			return this;
		}

		public Criteria andCommentTimeBetween(Date value1, Date value2) {
			addCriterion("comment_time between", value1, value2, "commentTime");
			return this;
		}

		public Criteria andCommentTimeNotBetween(Date value1, Date value2) {
			addCriterion("comment_time not between", value1, value2,
					"commentTime");
			return this;
		}
	}
}