package com.twitpic.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UsersProfileExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public UsersProfileExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected UsersProfileExample(UsersProfileExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table users_profile
     *
     * @abatorgenerated Sun Aug 02 17:41:31 CST 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andAccountIsNull() {
            addCriterion("account is null");
            return this;
        }

        public Criteria andAccountIsNotNull() {
            addCriterion("account is not null");
            return this;
        }

        public Criteria andAccountEqualTo(String value) {
            addCriterion("account =", value, "account");
            return this;
        }

        public Criteria andAccountNotEqualTo(String value) {
            addCriterion("account <>", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThan(String value) {
            addCriterion("account >", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThanOrEqualTo(String value) {
            addCriterion("account >=", value, "account");
            return this;
        }

        public Criteria andAccountLessThan(String value) {
            addCriterion("account <", value, "account");
            return this;
        }

        public Criteria andAccountLessThanOrEqualTo(String value) {
            addCriterion("account <=", value, "account");
            return this;
        }

        public Criteria andAccountLike(String value) {
            addCriterion("account like", value, "account");
            return this;
        }

        public Criteria andAccountNotLike(String value) {
            addCriterion("account not like", value, "account");
            return this;
        }

        public Criteria andAccountIn(List<String> values) {
            addCriterion("account in", values, "account");
            return this;
        }

        public Criteria andAccountNotIn(List<String> values) {
            addCriterion("account not in", values, "account");
            return this;
        }

        public Criteria andAccountBetween(String value1, String value2) {
            addCriterion("account between", value1, value2, "account");
            return this;
        }

        public Criteria andAccountNotBetween(String value1, String value2) {
            addCriterion("account not between", value1, value2, "account");
            return this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("location is null");
            return this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("location is not null");
            return this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("location =", value, "location");
            return this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("location <>", value, "location");
            return this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("location >", value, "location");
            return this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("location >=", value, "location");
            return this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("location <", value, "location");
            return this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("location <=", value, "location");
            return this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("location like", value, "location");
            return this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("location not like", value, "location");
            return this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("location in", values, "location");
            return this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("location not in", values, "location");
            return this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("location between", value1, value2, "location");
            return this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("location not between", value1, value2, "location");
            return this;
        }

        public Criteria andPictureIsNull() {
            addCriterion("picture is null");
            return this;
        }

        public Criteria andPictureIsNotNull() {
            addCriterion("picture is not null");
            return this;
        }

        public Criteria andPictureEqualTo(String value) {
            addCriterion("picture =", value, "picture");
            return this;
        }

        public Criteria andPictureNotEqualTo(String value) {
            addCriterion("picture <>", value, "picture");
            return this;
        }

        public Criteria andPictureGreaterThan(String value) {
            addCriterion("picture >", value, "picture");
            return this;
        }

        public Criteria andPictureGreaterThanOrEqualTo(String value) {
            addCriterion("picture >=", value, "picture");
            return this;
        }

        public Criteria andPictureLessThan(String value) {
            addCriterion("picture <", value, "picture");
            return this;
        }

        public Criteria andPictureLessThanOrEqualTo(String value) {
            addCriterion("picture <=", value, "picture");
            return this;
        }

        public Criteria andPictureLike(String value) {
            addCriterion("picture like", value, "picture");
            return this;
        }

        public Criteria andPictureNotLike(String value) {
            addCriterion("picture not like", value, "picture");
            return this;
        }

        public Criteria andPictureIn(List<String> values) {
            addCriterion("picture in", values, "picture");
            return this;
        }

        public Criteria andPictureNotIn(List<String> values) {
            addCriterion("picture not in", values, "picture");
            return this;
        }

        public Criteria andPictureBetween(String value1, String value2) {
            addCriterion("picture between", value1, value2, "picture");
            return this;
        }

        public Criteria andPictureNotBetween(String value1, String value2) {
            addCriterion("picture not between", value1, value2, "picture");
            return this;
        }

        public Criteria andSignatureIsNull() {
            addCriterion("signature is null");
            return this;
        }

        public Criteria andSignatureIsNotNull() {
            addCriterion("signature is not null");
            return this;
        }

        public Criteria andSignatureEqualTo(String value) {
            addCriterion("signature =", value, "signature");
            return this;
        }

        public Criteria andSignatureNotEqualTo(String value) {
            addCriterion("signature <>", value, "signature");
            return this;
        }

        public Criteria andSignatureGreaterThan(String value) {
            addCriterion("signature >", value, "signature");
            return this;
        }

        public Criteria andSignatureGreaterThanOrEqualTo(String value) {
            addCriterion("signature >=", value, "signature");
            return this;
        }

        public Criteria andSignatureLessThan(String value) {
            addCriterion("signature <", value, "signature");
            return this;
        }

        public Criteria andSignatureLessThanOrEqualTo(String value) {
            addCriterion("signature <=", value, "signature");
            return this;
        }

        public Criteria andSignatureLike(String value) {
            addCriterion("signature like", value, "signature");
            return this;
        }

        public Criteria andSignatureNotLike(String value) {
            addCriterion("signature not like", value, "signature");
            return this;
        }

        public Criteria andSignatureIn(List<String> values) {
            addCriterion("signature in", values, "signature");
            return this;
        }

        public Criteria andSignatureNotIn(List<String> values) {
            addCriterion("signature not in", values, "signature");
            return this;
        }

        public Criteria andSignatureBetween(String value1, String value2) {
            addCriterion("signature between", value1, value2, "signature");
            return this;
        }

        public Criteria andSignatureNotBetween(String value1, String value2) {
            addCriterion("signature not between", value1, value2, "signature");
            return this;
        }

        public Criteria andSelfIntroductionIsNull() {
            addCriterion("self_introduction is null");
            return this;
        }

        public Criteria andSelfIntroductionIsNotNull() {
            addCriterion("self_introduction is not null");
            return this;
        }

        public Criteria andSelfIntroductionEqualTo(String value) {
            addCriterion("self_introduction =", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionNotEqualTo(String value) {
            addCriterion("self_introduction <>", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionGreaterThan(String value) {
            addCriterion("self_introduction >", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionGreaterThanOrEqualTo(String value) {
            addCriterion("self_introduction >=", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionLessThan(String value) {
            addCriterion("self_introduction <", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionLessThanOrEqualTo(String value) {
            addCriterion("self_introduction <=", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionLike(String value) {
            addCriterion("self_introduction like", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionNotLike(String value) {
            addCriterion("self_introduction not like", value, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionIn(List<String> values) {
            addCriterion("self_introduction in", values, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionNotIn(List<String> values) {
            addCriterion("self_introduction not in", values, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionBetween(String value1, String value2) {
            addCriterion("self_introduction between", value1, value2, "selfIntroduction");
            return this;
        }

        public Criteria andSelfIntroductionNotBetween(String value1, String value2) {
            addCriterion("self_introduction not between", value1, value2, "selfIntroduction");
            return this;
        }

        public Criteria andThemeIsNull() {
            addCriterion("theme is null");
            return this;
        }

        public Criteria andThemeIsNotNull() {
            addCriterion("theme is not null");
            return this;
        }

        public Criteria andThemeEqualTo(Integer value) {
            addCriterion("theme =", value, "theme");
            return this;
        }

        public Criteria andThemeNotEqualTo(Integer value) {
            addCriterion("theme <>", value, "theme");
            return this;
        }

        public Criteria andThemeGreaterThan(Integer value) {
            addCriterion("theme >", value, "theme");
            return this;
        }

        public Criteria andThemeGreaterThanOrEqualTo(Integer value) {
            addCriterion("theme >=", value, "theme");
            return this;
        }

        public Criteria andThemeLessThan(Integer value) {
            addCriterion("theme <", value, "theme");
            return this;
        }

        public Criteria andThemeLessThanOrEqualTo(Integer value) {
            addCriterion("theme <=", value, "theme");
            return this;
        }

        public Criteria andThemeIn(List<Integer> values) {
            addCriterion("theme in", values, "theme");
            return this;
        }

        public Criteria andThemeNotIn(List<Integer> values) {
            addCriterion("theme not in", values, "theme");
            return this;
        }

        public Criteria andThemeBetween(Integer value1, Integer value2) {
            addCriterion("theme between", value1, value2, "theme");
            return this;
        }

        public Criteria andThemeNotBetween(Integer value1, Integer value2) {
            addCriterion("theme not between", value1, value2, "theme");
            return this;
        }

        public Criteria andLoginTimeIsNull() {
            addCriterion("login_time is null");
            return this;
        }

        public Criteria andLoginTimeIsNotNull() {
            addCriterion("login_time is not null");
            return this;
        }

        public Criteria andLoginTimeEqualTo(Date value) {
            addCriterion("login_time =", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeNotEqualTo(Date value) {
            addCriterion("login_time <>", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeGreaterThan(Date value) {
            addCriterion("login_time >", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("login_time >=", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeLessThan(Date value) {
            addCriterion("login_time <", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeLessThanOrEqualTo(Date value) {
            addCriterion("login_time <=", value, "loginTime");
            return this;
        }

        public Criteria andLoginTimeIn(List<Date> values) {
            addCriterion("login_time in", values, "loginTime");
            return this;
        }

        public Criteria andLoginTimeNotIn(List<Date> values) {
            addCriterion("login_time not in", values, "loginTime");
            return this;
        }

        public Criteria andLoginTimeBetween(Date value1, Date value2) {
            addCriterion("login_time between", value1, value2, "loginTime");
            return this;
        }

        public Criteria andLoginTimeNotBetween(Date value1, Date value2) {
            addCriterion("login_time not between", value1, value2, "loginTime");
            return this;
        }
    }
}